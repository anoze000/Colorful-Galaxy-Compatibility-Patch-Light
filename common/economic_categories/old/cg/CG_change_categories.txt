country = {
	hidden = yes
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

country_base = {
	parent = country
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}

ships = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		upkeep
		cost
		logistics
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	parent = country
	modifier_category = ship
	triggered_cost_modifier = {
		key = starbase_shipyard_build
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
		}
	}
	triggered_cost_modifier = {
		key = starbase_shipyard_artificial_build
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			is_space_fauna = no
		}
	}
	triggered_cost_modifier = {
		key = starbase_shipyard_space_fauna_build
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			is_space_fauna = yes
		}
	}
	triggered_cost_modifier = {
		key = gdf_ship
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			has_ship_owner_type = galactic_community
		}
	}
	triggered_cost_modifier = {
		key = ship_nanite_swarmer
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			is_ship_size = nanite_swarmer
		}
	}
	triggered_cost_modifier = {
		key = ship_corvette
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = corvette
				is_ship_size = offspring_corvette
				is_ship_size = frigate
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_destroyer
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = destroyer
				is_ship_size = offspring_destroyer
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = cruiser
				is_ship_size = offspring_cruiser
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_battleship
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = battleship
				is_ship_size = offspring_battleship
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_mauler
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = mauler_stage_1
				is_ship_size = mauler_stage_2
				is_ship_size = mauler_stage_3
				is_ship_size = offspring_mauler_stage_1
				is_ship_size = offspring_mauler_stage_2
				is_ship_size = offspring_mauler_stage_3
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_stinger
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = stinger_stage_1
				is_ship_size = stinger_stage_2
				is_ship_size = stinger_stage_3
				is_ship_size = offspring_stinger_stage_1
				is_ship_size = offspring_stinger_stage_2
				is_ship_size = offspring_stinger_stage_3
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_weaver
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = weaver_stage_1
				is_ship_size = weaver_stage_2
				is_ship_size = weaver_stage_3
				is_ship_size = offspring_stinger_stage_1
				is_ship_size = offspring_stinger_stage_2
				is_ship_size = offspring_stinger_stage_3
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_harbinger
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = harbinger_stage_1
				is_ship_size = harbinger_stage_2
				is_ship_size = harbinger_stage_3
				is_ship_size = offspring_harbinger_stage_1
				is_ship_size = offspring_harbinger_stage_2
				is_ship_size = offspring_harbinger_stage_3
			}
		}
	}
	triggered_cost_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes			#When called from ship designer the design is not valid yet.
			is_ship_size = military_station_small
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			is_ship_size = military_station_small
		}
	}
	triggered_cost_modifier = {
		key = ship_military
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_class = shipclass_military
				is_ship_class = shipclass_military_special
			}
		}
	}
	triggered_upkeep_modifier = {
		key = ship_military
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_class = shipclass_military
				is_ship_class = shipclass_military_special
			}
		}
	}
	triggered_upkeep_modifier = {
		key = ship_science
		use_parent_icon = yes
		modifier_types = {
			mult
		}
		trigger = {
			is_scope_valid = yes
			is_ship_class = shipclass_science_ship
		}
	}
}

planets = {
	parent = country
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		food
		minerals
		love_juice
		holylight_crystal
		alloys
		sr_christian
		excellent_slave
		sr_beauty
	}
	hidden = yes
}

planet_districts = {
	parent = planet_structures
	generate_mult_modifiers = {
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
	modifier_category = planet
}

planet_jobs = {
	parent = planets
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	triggered_produces_modifier = {
		key = planet_jobs_organics
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop_group = no
		}
	}
	modifier_category = pop_job
}


planet_jobs_robotic = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
	}
	modifier_category = pop_job
}


planet_researchers = {
	icon = "job_researcher"
	parent = planet_jobs_specialist
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
	}
	modifier_category = pop_job
}

planet_pops = {
	parent = planets
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_group
	triggered_upkeep_modifier = {
		key = planet_pops_robotics
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop_group = yes
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_cyborgs
		modifier_types = {
			mult
		}
		trigger = {
			has_trait = trait_cybernetic
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_organics
		modifier_types = {
			mult
		}
		trigger = {
			is_robot_pop_group = no
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			add
		}
		trigger = {
			is_unemployed = yes
		}
	}
	triggered_produces_modifier = {
		key = planet_dcyh_pops_militarist
		modifier_types = {
			add
		}
		trigger = {
			has_ethic = ethic_militarist
		}
	}
	triggered_upkeep_modifier = {
		key = planet_dcyh_pops_militarist
		modifier_types = {
			add
		}
		trigger = {
			has_ethic = ethic_militarist
		}
	}
	triggered_upkeep_modifier = {
		key = planet_pops_lust_slave
		modifier_types = {
			add
		}
		trigger = {
			is_pop_category = slave
			has_trait = trait_all_slave
		}
	}
}

pop_category_slave = {
	parent = planet_pops
	generate_mult_modifiers = {
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_group
}

pop_category_workers = {
	parent = planet_pops
	generate_mult_modifiers = {
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop_group
}
